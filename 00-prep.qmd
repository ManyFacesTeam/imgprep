---
title: "Image Prep Pipeline"
format: 
  html:
    toc: true
    fig-asp: 0.667
    fig-height: 400
execute: 
  echo: true
  warning: true
  error: true
---

```{r}
#| message: false

set.seed(8675309)
# remotes::install_github("debruine/webmorphR")
library(webmorphR)
# remotes::install_github("debruine/webmorphR.dlib")
# library(webmorphR.dlib)
```

## Setup

Since we can't put all of the images in the code repository for privacy purposes, this code assumes the images are in the project directory under "images/raw" and will save processed images under "images/proc". The repository has some demo images in this directory for script testing purposes.

```{r}
# setup images directories
img_dir <- "manyfaces"
raw_dir <- file.path(img_dir, "raw")
proc_dir <- file.path(img_dir, "proc")

# colour defaults
wm_opts(fill = "white") # set fill to image background colour
```

## Load images 

```{r}
# read in only front-facing raw images
raw_files <- list.files(raw_dir, "_0\\.cr3$", 
                        full.names = TRUE, 
                        recursive = TRUE, 
                        ignore.case = TRUE)

raw_files2 <- list.files(raw_dir, "_0\\.cr2$", 
                        full.names = TRUE, 
                        recursive = TRUE, 
                        ignore.case = TRUE)
```

## Delineate 

We just need the centre eye points here. 

```{r}
# images too big for Face++
for (i in seq_along(raw_files)) {
  tem <- sub("\\.CR3", "\\.tem", raw_files[[i]])
  if (!file.exists(tem)) {
    raw_imgs <- read_stim(raw_files[[i]])
    
    tryCatch({
      small <- raw_imgs |>
        resize(0.25) |>
        auto_delin("fpp106")
      
      small[[1]]$img <- NULL
      small[[1]]$imgpath <- NULL
      big <- resize(small, 4)
      
      
      write_stim(big, 
                 dir = dirname(tem), 
                 names = basename(tem) |> sub("\\.tem$", "", x = _),
                 overwrite = FALSE)
    }, error = function(e) {
      message(e$message)
    })
  }
}
```


## Align

```{r}
# alignment defaults
align_def <- list(
  width = 600,
  height = 800,
  x1 = 225,
  x2 = 375,
  y1 = 350,
  y2 = 350
)

for (file in raw_files) {
  img <- read_stim(file)
  
  aligned <- align_def |>
    c(list(stimuli = img)) |>
    do.call(align, args = _)
  
  write_stim(aligned, dir = proc_dir)
}
```


```{r}
# quick checking viz - pupils aligned and horizontal
average_tem(aligned_imgs) |> draw_tem()
```

```{r}
std_neu <- read_stim(proc_dir, "_std_neu_0")

std_neu_all <- plot_stim(std_neu, ncol = 21)

write_stim(std_neu_all, dir = "manyfaces/figs",names = "std_neu_0")
```



```{r, eval= FALSE}

std_neu_files <- raw_files[grepl("_std_neu_0", raw_files)]
for (file in std_neu_files) {
  img <- read_stim(file)
  
  aligned <- img |>
    resize(0.2) |>
    align(width = 600,
          height = 800,
          pt1 = 71,
          pt2 = 71,
          x1 = 300,
          x2 = 300,
          y1 = 350,
          y2 = 350)
  
  write_stim(aligned, dir = "manyfaces/proc2")
}

```

```{r}
std_neu <- read_stim("manyfaces/proc2", "_std_neu_0")

std_neu_all <- plot_stim(std_neu, ncol = 21, fill = "black")

write_stim(std_neu_all, dir = "manyfaces/figs",names = "std_neu_0-noresize")
```
